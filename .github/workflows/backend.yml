---
# yamllint disable rule:truthy
# yamllint disable rule:line-length
name: "Backend"
on:
  pull_request:
    paths:
      - ".github/**"
      - "backend/**"
      - "development/**"
      - "python_sdk/**"
      - pyproject.toml
      - poetry.lock
      - "tasks/**"
  push:
    branches:
      - develop
      - stable

env:
  NEO4J_USERNAME: neo4j
  NEO4J_PASSWORD: admin
  NEO4J_ADDRESS: localhost
  NEO4J_PORT: 7687
  NEO4J_PROTOCOL: neo4j

jobs:
  python-tests:
    runs-on: "ubuntu-20.04"
    steps:
      - name: "Check out repository code"
        uses: "actions/checkout@v2"
      - name: "Setup Python environment"
        run: "pip install poetry==1.3.2 toml invoke"
      - name: "Setup Git"
        run: |
          git config --global --add safe.directory '*'
          git config --global user.email "infrahub@example.com"
          git config --global user.name "Infrahub"
      - name: "Setup Docker-Compose"
        run: cp development/docker-compose.override.yml.tmp development/docker-compose.override.yml
      - name: "Start database"
        run: "invoke demo.dev-start"
      - name: "Install project"
        run: "poetry install --only=main,dev,server"
      - name: "Black Tests"
        run: "poetry run invoke backend.black"
      - name: "Isort Tests"
        run: "poetry run invoke backend.isort"
      - name: "Flake8 Tests"
        run: "poetry run invoke backend.flake8"
      - name: "Pylint Tests"
        run: "poetry run invoke backend.pylint"
      - name: "Unit Tests"
        run: "poetry run pytest -v --cov=infrahub --cov-report term-missing --cov-report xml backend/tests/unit"
      - name: "Coveralls : Unit Tests"
        uses: coverallsapp/github-action@v2.0.0
        with:
          flag-name: backend-unit
      - name: "Integration Tests : User Workflows"
        run: "poetry run pytest -v --cov=infrahub --cov-report term-missing --cov-report xml backend/tests/integration/user_workflows/"
      - name: "Coveralls : Integration Tests"
        uses: coverallsapp/github-action@v2.0.0
        with:
          flag-name: backend-integration
