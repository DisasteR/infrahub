---
version: "3.4"
services:
  # --------------------------------------------------------------------------------
  #  - Prometheus to collect all metrics endpoints
  #  - Grafana to visualize these metrics
  #  - Loki to receive logs from promtail
  #  - Promtail to parse logs from different source
  # --------------------------------------------------------------------------------
  promtail:
    image: grafana/promtail:2.8.4
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/containers:/var/lib/docker/containers
    command:
      - '-config.file=/etc/promtail/config.yml'
      - '-config.expand-env=true'
    depends_on:
      - loki
  loki:
    image: grafana/loki:2.8.4
    volumes:
      - type: bind
        source: ./loki/config.yml
        target: /etc/loki/config.yml
        read_only: true
      - loki_data:/loki
    command:
      - '-config.file=/etc/loki/config.yml'
      - '-config.expand-env=true'
    ports:
      - "3100:3100"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - type: bind
        source: ./prometheus/config.yml
        target: /etc/prometheus/prometheus.yml
        read_only: true
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=1d'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:10.0.3
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3500:3000"
    depends_on:
      - loki
      - prometheus

  # --------------------------------------------------------------------------------
  # Uncomment if you are using memgraph as database
  #  - Memgraph Exporter to read metrics from memgraph and expose it for prometheus
  # --------------------------------------------------------------------------------
  memgraph-exporter:
    build:
      context: ./memgraph_exporter
    image: memgraph-exporter
    hostname: "memgraph_exp"

  # --------------------------------------------------------------------------------
  #  Infrahub Server
  # --------------------------------------------------------------------------------
  infrahub-server:
    ports:
      - "8000:8000"

# --------------------------------------------------------------------------------
# Uncomment to expose the database and/or the message bus outside of Docker Compose
# --------------------------------------------------------------------------------
#   database:
#     image: "memgraph/memgraph-platform:2.10.0-memgraph2.10.0-lab2.8.0"
#     entrypoint: ["/usr/bin/supervisord"]
#     ports:
#       - "7474:7474"
#       - "7687:7687"
#   message-queue:
#     ports:
#       - "5672:5672"
#       - "15672:15672"
#   cache:
#     ports:
#       - "6379:6379"


volumes:
  grafana_data:
  loki_data:
  prometheus_data:
